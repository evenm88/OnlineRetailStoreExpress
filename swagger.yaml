tags:
- name: users
  description: users API
- name: products
  description: products API
- name: orders
  description: orders API


paths:
# [GET] users
  /users:
    get:
      tags:
      - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] users
    post:
      tags:
      - users
      summary: Add User
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] users/id
    put:
      tags:
      - users
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] users/id
    delete:
      tags:
      - users
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'



# [GET] products
  /products:
    get:
      tags:
      - products
      summary: Find All products
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] products
    post:
      tags:
      - products
      summary: Add product
      parameters:
      - name: body
        in: body
        description: products Data
        required: true
        schema:
          $ref: '#/definitions/products'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] products/id
  /products/{id}:
    get:
      tags:
      - products
      summary: Find product By Id
      parameters:
      - name: id
        in: path
        description: products Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] products/id
    put:
      tags:
      - products
      summary: Update product By Id
      parameters:
      - name: id
        in: path
        description: product Id
        required: true
      - name: body
        in: body
        description: product Data
        required: true
        schema:
          $ref: '#/definitions/products'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] products/id
    delete:
      tags:
      - products
      summary: Delete product By Id
      parameters:
      - name: id
        in: path
        description: product Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'



# [GET] orders
  /orders:
    get:
      tags:
      - orders
      summary: Find All orders
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] orders
    post:
      tags:
      - orders
      summary: Add order
      parameters:
      - name: body
        in: body
        description: order Data
        required: true
        schema:
          $ref: '#/definitions/orders'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] orders/id
  /orders/{id}:
    get:
      tags:
      - orders
      summary: Find order By Id
      parameters:
      - name: id
        in: path
        description: orders Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] orders/id
    put:
      tags:
      - orders
      summary: Update order By Id
      parameters:
      - name: id
        in: path
        description: order Id
        required: true
      - name: body
        in: body
        description: order Data
        required: true
        schema:
          $ref: '#/definitions/orders'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] orders/id
    delete:
      tags:
      - orders
      summary: Delete order By Id
      parameters:
      - name: id
        in: path
        description: order Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'



# definitions
definitions:
  users:
    type: object
    required:
        - email
        - password
    properties:
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user Password
  products:
    type: object
    required:
        - ProductId
        - ProductName
        - ProductPrice
        - AvailableQuantity
    properties:
      ProductId:
        type: string
      ProductName:
        type: string
      ProductPrice:
        type: number
      AvailableQuantity:
        type: number
  orders:
    type: object
    required:
        - OrderId
        - ProductId
        - Quantity
        - BillAmount
    properties:
      OrderId:
        type: string
      ProductId:
        type: string
      Quantity:
        type: number
      BillAmount:
        type: number

schemes:
 - https
 - http
